# # Overview
#
# Start or stop the nodejs webapp running on the 'webapp' container
# Used for testing website up/down status and seeing statistics on the Grafana blackbox exporter dashboard
# Uses the 'forever' npm utility to start/stop
# Does nothing and outputs status if trying to start and already up
# Does nothing and outputs status if trying to stop and already stopped
#
# # Playbook Parameters
# 
# start_stop | string('start', 'stop') : Action to perform to the webapp
#
# # Examples
#
# Start the webapp
# ansible-playbook start_stop_webapp.yml -e start_stop=start
#
# Stop the webapp
# ansible-playbook start_stop_webapp.yml -e start_stop=stop
#

---
- name: Start/stop webapp
  hosts: webapp

  vars:
    webapp_url: "http://webapp:4000/index"

  tasks:

    - name: Check if required 'start_stop' start/stop variable is set and with accepted values
      fail:
        msg: "Invalid start_stop. Supported values are 'start' or 'stop'."
      when: "'start_stop' not in vars or vars.start_stop not in ['start', 'stop']"

    - name: Check if 'forever' npm package is installed to start/stop webapp
      npm:
        name: forever
        global: true
      become: true

    - name: Check webapp status pre-action
      uri:
        url: "{{ webapp_url }}"
        method: GET
        return_content: false
        status_code: [200, -1]
      register: webapp_precheck
      ignore_errors: true

    - name: Start webapp
      shell: "/usr/local/bin/forever start /app/index.js" 
      args:
        chdir: /app
      when: start_stop == "start" and webapp_precheck.status != 200
    
    - name: Pause for a bit to allow webapp to start
      pause:
        prompt: "Pausing for 5s to allow webapp to start..."
        seconds: 5
      when: start_stop == "start" and webapp_precheck.status != 200

    - name: Stop webapp
      shell: "/usr/local/bin/forever stop /app/index.js"
      when: start_stop == "stop" and webapp_precheck.status == 200

    - name: Check webapp status post-action
      uri:
        url: "{{ webapp_url }}"
        method: GET
        return_content: false
        status_code: [200, -1]
      register: webapp_postcheck
    
    - name: Fail if webapp did not start correctly
      fail:
        msg: 
          - "Something went wrong while attempting to start webapp"
          - "Received status code [{{ webapp_postcheck.status }}]"
      when: start_stop == "start" and webapp_postcheck.status != 200
    
    - name: Fail if webapp did not stop correctly
      fail:
        msg: 
          - "Something went wrong while attempting to stop webapp"
          - "Received status code [{{ webapp_postcheck.status }}]"
      when: start_stop == "stop" and webapp_postcheck.status != -1

    - name: Output webapp status
      debug:
        msg: 
          - "Webapp [{{ start_stop }}] was sucessful"
          - "Received status code [{{ webapp_postcheck.status }}] from index page"
...